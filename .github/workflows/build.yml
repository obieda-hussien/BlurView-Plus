name: Build and Test BlurView-Plus

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  lint:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run lint
      run: ./gradlew lint

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run unit tests
      run: ./gradlew test
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          library/build/reports/tests/
          app/build/reports/tests/

  build:
    name: Build Library and APKs
    runs-on: ubuntu-latest
    needs: [lint, test]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build library AAR
      run: ./gradlew library:assembleRelease
      
    - name: Build debug APK
      run: ./gradlew app:assembleDebug
      
    - name: Build release APK
      run: ./gradlew app:assembleRelease
      
    - name: Display build artifacts info
      run: |
        echo "ðŸ“¦ Build Artifacts Generated:"
        echo "================================"
        echo "ðŸ”§ Library AAR files:"
        find library/build/outputs/aar -name "*.aar" -exec ls -lh {} \;
        echo ""
        echo "ðŸ“± APK files:"  
        find app/build/outputs/apk -name "*.apk" -exec ls -lh {} \;
        echo ""
        echo "âœ… All artifacts built successfully!"
      
    - name: Upload library AAR
      uses: actions/upload-artifact@v4
      with:
        name: library-aar
        path: library/build/outputs/aar/*.aar
        
    - name: Upload debug APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-apk
        path: app/build/outputs/apk/debug/*.apk
        
    - name: Upload release APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release-apk
        path: app/build/outputs/apk/release/*.apk


  performance-test:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    needs: [build]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run performance tests
      run: ./gradlew library:test --tests "*Performance*"
      continue-on-error: true
      
    - name: Upload performance results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-results
        path: library/build/reports/

  publish:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Publish to Maven Local
      run: ./gradlew publishToMavenLocal
      
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: BlurView-Plus v${{ github.run_number }}
        body: |
          ## BlurView-Plus Release v${{ github.run_number }}
          
          ### New Features
          - âœ¨ Windows-style dynamic background colors
          - ðŸŽ­ iPhone-style smooth animations  
          - âš¡ Advanced performance optimizations
          - ðŸŽ¨ Material You color integration
          - ðŸ”§ Enhanced developer tools
          
          ### Performance Improvements
          - Intelligent blur result caching
          - Adaptive quality scaling
          - Multi-threaded processing
          - Hardware acceleration optimization
          
          ### Bug Fixes
          - Various stability improvements
          - Memory leak fixes
          - Animation smoothness enhancements
        draft: false
        prerelease: false